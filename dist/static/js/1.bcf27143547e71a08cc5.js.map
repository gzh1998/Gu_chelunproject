{"version":3,"sources":["webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/_iter-detect.js","webpack:///./src/assets/loading2.pic.gif","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/toConsumableArray.js","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.4.1@swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/autoplay.vue","webpack:///./src/components/autoplay.vue?f3ac","webpack:///./src/components/autoplay.vue","webpack:///src/views/imgcar.vue","webpack:///./src/views/imgcar.vue?a697","webpack:///./src/views/imgcar.vue","webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/core.get-iterator-method.js","webpack:///./src/utils/lazyLoad.js","webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/_classof.js","webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/_iter-call.js","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/array/from.js","webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/_create-property.js","webpack:///./node_modules/_core-js@2.5.7@core-js/library/fn/array/from.js","webpack:///./node_modules/_core-js@2.5.7@core-js/library/modules/es6.array.from.js"],"names":["ITERATOR","__webpack_require__","SAFE_CLOSING","riter","Array","from","e","module","exports","exec","skipClosing","safe","arr","iter","next","done","p","__esModule","obj","_from","_from2","default","isArray","i","arr2","length","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","self","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","slice","instanceParams","instance","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","touchStartPreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","slideThumbActiveClass","hideOnClick","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","isShow","initindex","pageind","pagelength","gochildren","Number","watch","old","news","$refs","swp","datas","computed","extends_default","vuex_esm","img","mounted","methods","close","$emit","touchfun","console","log","newzhi","components_autoplay","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","ref","_l","item","touchstart","$event","alt","staticRenderFns","imgcar","imgId","Page","pageSize","flag","ind","dataimg","normalizeComponent","ssrContext","Loading","imglist","colorimglist","colorimgarr","_this","updated","lazyLoad","_this2","getimgs","payload","$route","id","imgid","page","pagesize","scrollfun","heights","wp","imgfun","childrens","autoplayclose","pagechildren","newpage","gocolor","$router","path","gochekuan","views_imgcar","scroll","directives","rawName","expression","data-src","gofather","gofatherpage","imgcar_Component","imgcar_normalizeComponent","__webpack_exports__","Iterators","ArrayProto","it","classof","getIteratorMethod","deal","nodes","ele","rect","dataset","onscroll","cof","TAG","ARG","O","T","B","tryGet","callee","anObject","iterator","entries","ret","$defineProperty","createDesc","f","ctx","$export","toObject","isArrayIter","toLength","createProperty","getIterFn","S","F","arrayLike","result","step","C","aLen","mapfn","mapping","iterFn"],"mappings":"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","file":"static/js/1.bcf27143547e71a08cc5.js","sourcesContent":["var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/_iter-detect.js\n// module id = 75+0\n// module chunks = 1 2","module.exports = __webpack_public_path__ + \"static/img/loading2.pic.20d5c35.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/loading2.pic.gif\n// module id = Eq73\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/toConsumableArray.js\n// module id = IHPB\n// module chunks = 1 2","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 14, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.4.1@swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"mask\">\r\n        <em class=\"iconfont\" @click=\"close\">&#xe6d1;</em>\r\n        <P>{{initindex+1}}/{{datas.length}} 张图片</P>\r\n        <div class=\"block\">\r\n            <div class=\"swiper-container\" ref=\"swp\">\r\n                <div class=\"swiper-wrapper\">\r\n                    <div class=\"swiper-slide\" v-for=\"(item,index) in datas\" :key=\"index\" @touchstart=\"touchfun(index)\">\r\n                        <img :src=\"item\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Swiper from 'swiper';\r\nimport { mapState, mapActions } from 'vuex';\r\nexport default {\r\n    name: '',\r\n    data() {\r\n        return {\r\n            isShow: true,\r\n            initindex: '',\r\n            pageind: 1,\r\n            pagelength: ''\r\n        }\r\n    },\r\n    props: {\r\n        gochildren: {\r\n            type: Number\r\n        }\r\n    },\r\n    //监听每一次props改变 从而改变 swiper的轮播图位置\r\n    watch: {\r\n        gochildren(old, news) {\r\n            this.initindex = old\r\n            var mySwiper = new Swiper(this.$refs.swp, {\r\n                initialSlide: this.initindex,\r\n                //解决滑动不顺畅\r\n                observer: true,\r\n                observeParents: true\r\n            })\r\n        },\r\n        datas(old, news) {\r\n            this.pagelength = old.length;\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            datas: state => state.img.arr\r\n        })\r\n    },\r\n\r\n    mounted() {\r\n        var mySwiper = new Swiper(this.$refs.swp, {\r\n            observer: true,\r\n            observeParents: true\r\n        })\r\n    },\r\n    methods: {\r\n        close() {\r\n            this.isShow = false;\r\n            this.$emit('gofather', this.isShow)\r\n        },\r\n         touchfun(index) {\r\n            //console.log(index+1)\r\n            this.initindex = index + 1;\r\n            console.log(this.pagelength - 4)\r\n            let newzhi = this.pagelength - 4\r\n            //滑动到最后几张的时候加载更多图片\r\n            if (this.initindex > newzhi) {\r\n                 this.pageind++;\r\n                 this.$emit('gofatherpage',this.pageind)\r\n            }   \r\n\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n@import url(\"//unpkg.com/element-ui@2.4.8/lib/theme-chalk/index.css\");\r\nhtml {\r\n    font-size: 625%;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.mask {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, .9);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    /*position: relative;*/\r\n}\r\n\r\n.mask em {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: .3rem;\r\n    height: .3rem;\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 32%;\r\n    left: 85%;\r\n}\r\n\r\n.mask>p {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 1rem;\r\n    height: .25rem;\r\n    background: #3aacff;\r\n    color:#fff;\r\n    position: absolute;\r\n    bottom:20%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: .14rem;\r\n}\r\n\r\n.block {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 1.5rem;\r\n    background: #fff;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 100%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.block .swiper-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n}\r\n\r\n.block .swiper-container .swiper-wrapper {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n}\r\n\r\n.swiper-wrapper .swiper-slide {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-shrink: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.swiper-slide img {\r\n    width: 100%;\r\n}\r\n\r\n.el-carousel__item h3 {\r\n    color: #475669;\r\n    font-size: 14px;\r\n    opacity: 0.75;\r\n    line-height: 150px;\r\n    margin: 0;\r\n}\r\n\r\n.el-carousel__item:nth-child(2n) {\r\n    background-color: #99a9bf;\r\n}\r\n\r\n.el-carousel__item:nth-child(2n+1) {\r\n    background-color: #d3dce6;\r\n}\r\n\r\n@import url('../../static/style/style.css');\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/autoplay.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mask\"},[_c('em',{staticClass:\"iconfont\",on:{\"click\":_vm.close}},[_vm._v(\"\")]),_vm._v(\" \"),_c('P',[_vm._v(_vm._s(_vm.initindex+1)+\"/\"+_vm._s(_vm.datas.length)+\" 张图片\")]),_vm._v(\" \"),_c('div',{staticClass:\"block\"},[_c('div',{ref:\"swp\",staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.datas),function(item,index){return _c('div',{key:index,staticClass:\"swiper-slide\",on:{\"touchstart\":function($event){_vm.touchfun(index)}}},[_c('img',{attrs:{\"src\":item,\"alt\":\"\"}})])}))])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-77e74f0c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/autoplay.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-77e74f0c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./autoplay.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./autoplay.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./autoplay.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-77e74f0c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./autoplay.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/autoplay.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"imgwrap\" @scroll=\"scrollfun\">\r\n        <Loading v-show=\"isShow\"></Loading>\r\n        <div class='colorbox'>\r\n            <span class=\"iconfont\" @click=\"gocolor\">\r\n                颜色 &#xe654;\r\n            </span>\r\n            <span class=\"iconfont\" @click=\"gochekuan\">\r\n                车款 &#xe654;\r\n            </span>\r\n        </div>\r\n        <!--{{colorimglist}}-->\r\n        <div class=\"hz\" ref='wp'>\r\n            <div class=\"imgbox\" v-for=\"(item,index) in (colorimglist||imglist)\" :key=\"index\" @click=\"imgfun(item,index)\">\r\n                <img :data-src=\"item\" alt=\"\" src=\"../assets/loading2.pic.gif\">\r\n            </div>\r\n        </div>\r\n        <Autoplay v-show=\"flag\" v-bind:gochildren=\"this.ind\" v-on:gofather=\"childrens\" v-on:gofatherpage=\"pagechildren\"></Autoplay>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\nimport { lazyLoad } from '../utils/lazyLoad';\r\nimport Autoplay from '../components/autoplay';\r\nimport Loading from '../components/loading';\r\nexport default {\r\n    name: '',\r\n    data() {\r\n        return {\r\n            imgId: 6,\r\n            Page: 1,\r\n            pageSize: 30,\r\n            flag: false,\r\n            isShow: true,\r\n            ind: 0,\r\n            dataimg: ''\r\n        }\r\n    },\r\n    components: {\r\n        Autoplay,\r\n        Loading\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            imglist: state => state.img.arr,\r\n            colorimglist: state => state.img.colorimgarr\r\n            \r\n        })\r\n    },\r\n    watch: {\r\n        colorimglist: (old, news) => {\r\n            this.dataimg = old\r\n            console.log(this.dataimg)\r\n        }\r\n    },\r\n    updated() {\r\n        lazyLoad('.imgwrap')\r\n    },\r\n    mounted() {\r\n        this.getimgs({ payload: this.$route.query.id, imgid: this.imgId, page: this.Page, pagesize: this.pageSize })\r\n        lazyLoad('.imgwrap')\r\n        setTimeout(() => {\r\n            this.isShow = false;\r\n        }, 2000)\r\n      \r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            getimgs: 'img/getimgs'\r\n        }),\r\n        //监听scroll滚动事件\r\n        scrollfun(e) {\r\n            let heights = this.$refs.wp.getBoundingClientRect().height;\r\n            // console.log(heights)\r\n            // console.log(this.$refs.wp.clientHeight)\r\n            // console.log(e.target.scrollTop)\r\n            //滑动到底部加载\r\n            if (e.target.scrollTop > ((heights - window.innerHeight) - 20)) {\r\n                this.Page++;\r\n                this.getimgs({ payload: this.$route.query.id, imgid: this.imgId, page: this.Page, pagesize: this.pageSize })\r\n                console.log(this.Page)\r\n                lazyLoad('.imgwrap')\r\n            }\r\n        },\r\n        //点击图片显示可轮播组件\r\n        imgfun(item, index) {\r\n            this.ind = index;\r\n            this.flag = true;\r\n        },\r\n        childrens(autoplayclose) {\r\n            this.flag = autoplayclose\r\n        },\r\n        pagechildren(newpage) {\r\n            this.Page = newpage\r\n            console.log(this.Page)\r\n            this.getimgs({ payload: this.$route.query.id, imgid: this.imgId, page: this.Page, pagesize: this.pageSize })\r\n        },\r\n        //选择颜色\r\n        gocolor() {\r\n            this.$router.push({ path: `/color?id=${this.$route.query.id}` })\r\n\r\n        },\r\n        gochekuan() {\r\n            this.$router.push({ path: `/chekuan?id=${this.$route.query.id}` })\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.imgwrap {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.imgwrap .colorbox {\r\n    width: 100%;\r\n    display: flex;\r\n    height: .4rem;\r\n    align-items: center;\r\n}\r\n\r\n.colorbox span {\r\n    width: 50%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: .14rem;\r\n}\r\n\r\n.hz {\r\n    width: 100%;\r\n    display: flex;\r\n    overflow-y: hidden;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.hz .imgbox {\r\n    width: 33%;\r\n    margin-top: .05rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.imgbox img {\r\n    width: 90%;\r\n}\r\n\r\n@import url('../../static/style/style.css');\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/imgcar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"imgwrap\",on:{\"scroll\":_vm.scrollfun}},[_c('Loading',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShow),expression:\"isShow\"}]}),_vm._v(\" \"),_c('div',{staticClass:\"colorbox\"},[_c('span',{staticClass:\"iconfont\",on:{\"click\":_vm.gocolor}},[_vm._v(\"\\n            颜色 \\n        \")]),_vm._v(\" \"),_c('span',{staticClass:\"iconfont\",on:{\"click\":_vm.gochekuan}},[_vm._v(\"\\n            车款 \\n        \")])]),_vm._v(\" \"),_c('div',{ref:\"wp\",staticClass:\"hz\"},_vm._l(((_vm.colorimglist||_vm.imglist)),function(item,index){return _c('div',{key:index,staticClass:\"imgbox\",on:{\"click\":function($event){_vm.imgfun(item,index)}}},[_c('img',{attrs:{\"data-src\":item,\"alt\":\"\",\"src\":require(\"../assets/loading2.pic.gif\")}})])})),_vm._v(\" \"),_c('Autoplay',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.flag),expression:\"flag\"}],attrs:{\"gochildren\":this.ind},on:{\"gofather\":_vm.childrens,\"gofatherpage\":_vm.pagechildren}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-b312d692\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/imgcar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b312d692\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./imgcar.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./imgcar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./imgcar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b312d692\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./imgcar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/imgcar.vue\n// module id = null\n// module chunks = ","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/_is-array-iter.js\n// module id = V2W7\n// module chunks = 1 2","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/core.get-iterator-method.js\n// module id = YW8S\n// module chunks = 1 2","export function lazyLoad(el) {\r\n    function inView(ele) {\r\n        let rect = ele.getBoundingClientRect();\r\n        // console.log(ele.offsetTop);\r\n        if (rect.left > 0 && rect.left < window.innerWidth && rect.top > 0 && rect.top < window.innerHeight) {\r\n            return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    //判断图片是否加载\r\n    function isDeal(ele) {\r\n        return ele.src == ele.dataset.src;\r\n    }\r\n\r\n    function deal() {\r\n        let nodes = [...document.querySelectorAll('img[data-src]')];\r\n        // console.log(nodes);\r\n        nodes.forEach((item) => {\r\n            if (inView(item) && !isDeal(item)) {\r\n                item.src = item.dataset.src;\r\n            }\r\n        })\r\n    }\r\n    deal();\r\n\r\n    if (el) {\r\n        document.querySelector(el).addEventListener(\"scroll\", deal)\r\n            //console.log(el)\r\n    } else {\r\n        window.onscroll = deal;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/lazyLoad.js","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/_classof.js\n// module id = adiS\n// module chunks = 1 2","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/_iter-call.js\n// module id = kDTw\n// module chunks = 1 2","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/array/from.js\n// module id = kfHR\n// module chunks = 1 2","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/_create-property.js\n// module id = kksE\n// module chunks = 1 2","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/fn/array/from.js\n// module id = qQfv\n// module chunks = 1 2","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.7@core-js/library/modules/es6.array.from.js\n// module id = yrDz\n// module chunks = 1 2"],"sourceRoot":""}